const _0x2b5621 = _0x25e3; (function (_0x1a6cca, _0x4992af) { const _0x1b12fe = _0x25e3, _0x42639d = _0x1a6cca(); while (!![]) { try { const _0x1a287a = -parseInt(_0x1b12fe(0x139)) / 0x1 + -parseInt(_0x1b12fe(0x1c6)) / 0x2 * (parseInt(_0x1b12fe(0x1c4)) / 0x3) + -parseInt(_0x1b12fe(0x13d)) / 0x4 + -parseInt(_0x1b12fe(0x132)) / 0x5 * (parseInt(_0x1b12fe(0x193)) / 0x6) + -parseInt(_0x1b12fe(0x13f)) / 0x7 + parseInt(_0x1b12fe(0x1cd)) / 0x8 + parseInt(_0x1b12fe(0x134)) / 0x9; if (_0x1a287a === _0x4992af) break; else _0x42639d['push'](_0x42639d['shift']()); } catch (_0x4d3f81) { _0x42639d['push'](_0x42639d['shift']()); } } }(_0x2a72, 0x61baf)); function _0x25e3(_0x1d5e1f, _0x6834d1) { const _0x2a7202 = _0x2a72(); return _0x25e3 = function (_0x25e363, _0x27f5b1) { _0x25e363 = _0x25e363 - 0xeb; let _0x43123b = _0x2a7202[_0x25e363]; return _0x43123b; }, _0x25e3(_0x1d5e1f, _0x6834d1); } const $ = new Env(_0x2b5621(0x113)), defaultSettings = { 'app_background': '', 'close_more_live': ![], 'close_help_me_play_outer': ![], 'close_follow_card': ![] }, base_multi_view = { 'bg_image': _0x2b5621(0x172), 'copy_writing': _0x2b5621(0x18d), 'gather_room_list': [], 'relation_view': [], 'room_id': 0xc37f4f, 'room_list': [], 'sub_bg_color': _0x2b5621(0x1bf), 'sub_slt_color': '#ff0000dd', 'sub_text_color': '#007bffd9', 'title': _0x2b5621(0x159), 'view_pattern': 0x1, 'view_type': 0x0 }, roomInfoT = _0x575d24 => ({ 'roomID': _0x575d24[_0x2b5621(0x123)][_0x2b5621(0xfa)], 'short_id': _0x575d24[_0x2b5621(0x123)][_0x2b5621(0x14a)], 'liveStatus': _0x575d24[_0x2b5621(0x123)]['live_status'], 'uid': _0x575d24[_0x2b5621(0x123)][_0x2b5621(0xf3)], 'roomTitle': _0x575d24[_0x2b5621(0x123)][_0x2b5621(0x127)], 'cover': _0x575d24[_0x2b5621(0x123)][_0x2b5621(0x12d)] }), userInfoT = _0x2c3621 => ({ 'face': _0x2c3621[_0x2b5621(0x123)][_0x2b5621(0x1a4)][_0x2b5621(0x175)], 'uname': _0x2c3621[_0x2b5621(0x123)][_0x2b5621(0x1a4)][_0x2b5621(0x11b)] }), card_info = (_0x57443c, _0x22c269) => ({ 'conf_id': 0x16, 'icon_url_blue': _0x2b5621(0x1a2), 'icon_url_grey': _0x2b5621(0x185), 'icon_url_pink': _0x2b5621(0xeb), 'jump_url_link': _0x57443c == _0x2b5621(0x158) ? _0x2b5621(0x1c2) + _0x22c269 : _0x2b5621(0x16e) + _0x22c269, 'jump_url_pc': _0x57443c == _0x2b5621(0x158) ? _0x2b5621(0x11c) + _0x22c269 : _0x2b5621(0x16e) + _0x22c269, 'jump_url_pink': _0x57443c == _0x2b5621(0x158) ? _0x2b5621(0x1c2) + _0x22c269 : 'http://remove.card/' + _0x22c269, 'jump_url_web': _0x57443c == _0x2b5621(0x158) ? _0x2b5621(0x1c2) + _0x22c269 : 'http://remove.card/' + _0x22c269, 'rank': 0x0, 'rank_name': _0x57443c == _0x2b5621(0x158) ? _0x2b5621(0x180) : '移除卡片', 'uid': 0x0 }); let respBody = JSON[_0x2b5621(0x1a3)]($response[_0x2b5621(0x1aa)]), setting_ = $['getdata'](_0x2b5621(0x112)), cardCaches = $[_0x2b5621(0xf1)](_0x2b5621(0x10f)), cards = $[_0x2b5621(0xf1)]('@Bili.Advanced.Live.Cards'), IDs = $[_0x2b5621(0x125)](_0x2b5621(0x184)), results = []; (async function () { const _0x525b11 = _0x2b5621; funcCard(respBody[_0x525b11(0x123)]['room_info'][_0x525b11(0xfa)]); !setting_ && ($[_0x525b11(0x1b6)](_0x525b11(0x119)), $[_0x525b11(0x1cb)](JSON['stringify'](defaultSettings), _0x525b11(0x112)), setting_ = defaultSettings);; !IDs && ($[_0x525b11(0x1b6)](_0x525b11(0x1be)), $[_0x525b11(0x1cb)](JSON[_0x525b11(0xfd)]([]), _0x525b11(0x10f)), cardCaches = []);; !cards && ($[_0x525b11(0x1b6)]('\x0a🔴没有设置动态卡片集,\x20设置为空'), $['setdata'](JSON['stringify']([]), _0x525b11(0xf7)), cards = []); let _0x5794a2 = []; if (cards['length'] > 0x0) $[_0x525b11(0x1b6)](_0x525b11(0x1c3) + cards[_0x525b11(0x1cc)] + '\x20个卡片,\x20开始获取卡片信息'), _0x5794a2 = cards[_0x525b11(0x156)](async (_0x1c18b6, _0x228606) => { const _0x230a9c = _0x525b11; try { const _0x355266 = cardCaches[_0x230a9c(0x1ba)](_0x5a3997 => { const _0x859574 = _0x230a9c; return _0x5a3997[_0x859574(0x140)] == _0x1c18b6 || _0x5a3997[_0x859574(0x14a)] == _0x1c18b6; }); if (_0x355266 != -0x1) return $[_0x230a9c(0x1b6)](_0x230a9c(0x13e) + cardCaches[_0x355266][_0x230a9c(0x140)] + ',\x20标题是:\x20' + cardCaches[_0x355266][_0x230a9c(0x17d)]), results['push'](cardCaches[_0x355266]), cardCaches[_0x355266]; else { $[_0x230a9c(0x1b6)]('\x0a🔴未获取到缓存,\x20开始获取直播间:\x20' + _0x1c18b6); const _0x313d9a = await abc(roomInfoT, 'https://api.live.bilibili.com/room/v1/Room/get_info?room_id=' + _0x1c18b6), _0x238f32 = await abc(userInfoT, _0x230a9c(0x147) + _0x313d9a[_0x230a9c(0xf3)]), _0x476dc6 = buildCardInfo(_0x313d9a, _0x238f32, _0x228606); return $[_0x230a9c(0x1b6)](_0x230a9c(0x173) + _0x476dc6[_0x230a9c(0x140)] + ',标题是:\x20' + _0x476dc6['roomTitle']), results[_0x230a9c(0x1a9)](_0x476dc6), cardCaches[_0x230a9c(0x1a9)](_0x476dc6), $[_0x230a9c(0x115)](cardCaches, '@Bili.Advanced.Live.Caches'), $['log']('\x0a🟢成功添加到缓存:\x20' + _0x476dc6['roomID']), _0x476dc6; } } catch (_0x3ffb3e) { console['error']('\x0a🔴获取直播间\x20' + _0x1c18b6 + _0x230a9c(0x167) + _0x3ffb3e['message']); } }); else IDs ? _0x5794a2 = Object[_0x525b11(0x116)](IDs)[_0x525b11(0x156)](async (_0x15bd9b, _0x5d38aa) => { const _0x284e86 = _0x525b11; try { const _0xb88382 = cardCaches[_0x284e86(0x1ba)](_0x353daf => { const _0x179da4 = _0x284e86; return _0x353daf[_0x179da4(0x140)] == IDs[_0x15bd9b] || _0x353daf[_0x179da4(0x14a)] == IDs[_0x15bd9b]; }); if (_0xb88382 != -0x1) return $[_0x284e86(0x1b6)](_0x284e86(0x13e) + cardCaches[_0xb88382][_0x284e86(0x140)] + _0x284e86(0x118) + cardCaches[_0xb88382][_0x284e86(0x17d)]), results['push'](cardCaches[_0xb88382]), cardCaches[_0xb88382]; else { $[_0x284e86(0x1b6)]('\x0a🔴未获取到缓存,开始获取直播间:\x20' + IDs[_0x15bd9b]); const _0xa8cdee = await abc(roomInfoT, _0x284e86(0x161) + IDs[_0x15bd9b]), _0x24c78a = await abc(userInfoT, _0x284e86(0x147) + _0xa8cdee[_0x284e86(0xf3)]), _0x48d9c6 = buildCardInfo(_0xa8cdee, _0x24c78a, _0x5d38aa); return $[_0x284e86(0x1b6)](_0x284e86(0x173) + _0x48d9c6[_0x284e86(0x140)] + _0x284e86(0x118) + _0x48d9c6[_0x284e86(0x17d)]), results[_0x284e86(0x1a9)](_0x48d9c6), cardCaches[_0x284e86(0x1a9)](_0x48d9c6), $[_0x284e86(0x1b6)]('\x0a🟢成功添加到缓存:\x20' + _0x48d9c6[_0x284e86(0x140)]), _0x48d9c6; } } catch (_0x13ba8f) { console['error'](_0x284e86(0x1d5) + IDs[_0x15bd9b] + _0x284e86(0x167) + _0x13ba8f[_0x284e86(0x131)]); } }) : $[_0x525b11(0x1b6)](_0x525b11(0x162)); await Promise[_0x525b11(0x121)](_0x5794a2)['then'](() => { const _0x16d46a = _0x525b11; console[_0x16d46a(0x1b6)]('\x0a🟢所有直播间卡片获取完毕,\x20共\x20' + results[_0x16d46a(0x1cc)] + '\x20个'); })[_0x525b11(0x10a)](_0x51d906 => { const _0x4df407 = _0x525b11; console[_0x4df407(0x179)](_0x4df407(0x160), _0x51d906); }), results[_0x525b11(0x10c)](_0x393bab => { const _0x29f3b2 = _0x525b11; base_multi_view[_0x29f3b2(0x128)][_0x29f3b2(0x1a9)](build_multi_view_data(_0x393bab)); }), cardCaches ? ($[_0x525b11(0x115)](cardCaches, _0x525b11(0x10f)), $[_0x525b11(0x1b6)](_0x525b11(0x13a))) : ($[_0x525b11(0x1b6)](_0x525b11(0x1c8)), $[_0x525b11(0x1cb)](JSON[_0x525b11(0xfd)]([]), _0x525b11(0x10f))), respBody[_0x525b11(0x123)]['multi_view_info'] = base_multi_view, $['done']({ 'body': JSON[_0x525b11(0xfd)](respBody) }); }()); function build_multi_view_data(_0x5bf481) { const _0x48f633 = _0x2b5621; return { 'anchor_face': _0x5bf481[_0x48f633(0x175)], 'cover': _0x5bf481[_0x48f633(0x1ac)], 'duration': 0x0, 'gather_id': 0x0, 'jump_url': _0x48f633(0x166) + _0x5bf481[_0x48f633(0x140)], 'live_status': _0x5bf481[_0x48f633(0x191)], 'match_info': null, 'match_live_room': ![], 'num': 0xf423f, 'order_id': _0x5bf481[_0x48f633(0x199)], 'pub_date': '', 'switch': ![], 'text_small': _0x48f633(0x144), 'title': _0x5bf481[_0x48f633(0x17d)], 'up_name': '', 'use_view_vt': ![], 'view_id': _0x5bf481[_0x48f633(0x140)], 'view_name': _0x5bf481[_0x48f633(0x11b)], 'view_type': 0x0, 'watch_icon': _0x48f633(0xed) }; } function buildCardInfo(_0x4efe7b, _0x1819ed, _0x51150e) { const _0x543e31 = _0x2b5621; return { 'orderID': _0x51150e, 'roomID': _0x4efe7b[_0x543e31(0x140)], 'short_id': _0x4efe7b['short_id'], 'roomTitle': _0x4efe7b[_0x543e31(0x17d)], 'roomCover': _0x4efe7b[_0x543e31(0x1a5)], 'liveStatus': _0x4efe7b['liveStatus'], 'uid': _0x4efe7b['uid'], 'uname': _0x1819ed[_0x543e31(0x11b)], 'face': _0x1819ed['face'], 'timestamp': Date['now']() }; } function abc(_0x12c6ea, _0x8eb8a4) { const _0x3effac = _0x2b5621, _0x5c3e1c = { 'url': _0x8eb8a4, 'headers': { 'User-Agent': _0x3effac(0x1c1) }, 'method': _0x3effac(0xef) }; return new Promise(_0xef0bbb => { const _0x2364b2 = _0x3effac; $[_0x2364b2(0x142)](_0x5c3e1c, (_0x4a4e80, _0x56db5f, _0xefeb31) => { const _0x2a370e = _0x2364b2; try { if (_0x4a4e80) throw new Error(_0x4a4e80); else { const _0x4bfc15 = JSON['parse'](_0xefeb31); if (_0x4bfc15['code'] == 0x0 && _0x4bfc15[_0x2a370e(0x123)]) return $[_0x2a370e(0x1b6)](_0x2a370e(0xfc)), _0xef0bbb(_0x12c6ea(_0x4bfc15)); else throw new Error(_0x4bfc15['msg'] || _0xefeb31); } } catch (_0x279a05) { console[_0x2a370e(0x1b6)](_0x2a370e(0x133) + _0x279a05[_0x2a370e(0x131)]); } finally { } }); }); } function _0x2a72() { const _0x5c28d1 = ['uid', ',\x20结束!\x20🕛\x20', 'rawBody', 'getMinutes', '@Bili.Advanced.Live.Cards', '[INFO]\x20', 'split', 'room_id', 'readFileSync', '成功获取到信息', 'stringify', '\x0a🟢删除卡片:\x20', 'isShadowrocket', 'floor', 'lodash_get', 'getHours', 'setValueForKey', 'debug', 'new_area_rank_info', 'box.dat', 'getScript', 'Quantumult\x20X', 'image/png', 'catch', 'UndefinedError', 'forEach', 'getTime', 'redirection', '@Bili.Advanced.Live.Caches', 'Stash', 'set-cookie', '@Bili.Advanced.Live.Settings', 'B站直播间净化\x20v0.0.130', '[DEBUG]\x20', 'setjson', 'keys', 'isNode', ',标题是:\x20', '\x0a🔴未获取到设置,\x20设置为默认', 'http://', 'uname', 'https://add.card/', ',\x20开始!', 'substring', 'string', 'null', 'all', 'test', 'data', 'exec', 'getdata', 'substr', 'title', 'relation_view', 'done', 'openUrl', 'call', 'queryStr', 'user_cover', 'exit', 'getval', 'DIRECT', 'message', '3159490kfknNG', '\x0a获取失败\x0a出现错误:\x20', '27897867VGkbqg', 'status', 'url', 'path', 'mediaUrl', '476555cWmDPa', '\x0a🟢缓存已更新', 'indexOf', 'logErr', '3163420qfgsla', '\x0a🟢从缓存中获取到直播间:\x20', '5088223wVljBF', 'roomID', 'isNeedRewrite', 'post', 'toObj', '99.9万', 'dataFile', 'Loon', 'https://api.live.bilibili.com/live_user/v1/Master/info?uid=', 'followRedirect', 'toLocaleLowerCase', 'short_id', 'join', 'content-length', 'encoding', 'logLevels', ',\x20错误!', 'slice', 'Content-Length', 'params', 'writeFileSync', 'replace', 'cron', 'map', 'method', 'add', '吃鸡直播', 'initGotEnv', 'application/x-www-form-urlencoded', 'ckjar', 'isLoon', 'writedata', 'cookie', '\x0a🔴获取出错:\x20\x0a', 'https://api.live.bilibili.com/room/v1/Room/get_info?room_id=', '\x0a🔴没有设置任何卡片集', 'stash-version', 'lodash_set', 'timeout', 'https://live.bilibili.com/', '\x20失败:\x20\x0a', 'logs', 'activity_banner_info', 'existsSync', '*/*', 'send', 'runScript', 'http://remove.card/', 'POST', 'write', 'Cookie', 'https://i0.hdslb.com/bfs/live/edaa9477a1d8325dd0c36c419b6fd5f9646b2419.png', '\x0a🟢成功获取到直播间:\x20', 'cktough', 'face', 'isQuanX', 'headers', 'clipboard', 'error', 'auto-redirect', 'cwd', 'isArray', 'roomTitle', 'sound', 'resolve', '添加到卡片', 'env', 'more_live_tag', 'setCookieSync', '@Bili.Advanced.Live.card', 'https://i0.hdslb.com/bfs/live/cb7444b1faf1d785df6265bfdc1fcfc993419b76.png', 'toString', '[ERROR]\x20', 'media-url', 'read', 'wait', '\x0a🟢添加卡片:\x20', 'Shadowrocket', '切换其他主播', 'remove', 'Surge', 'updatePasteboard', 'liveStatus', 'isMuteLog', '6UXwtsc', 'logLevelPrefixs', 'auto-dismiss', 'iconv-lite', 'time', 'object', 'orderID', 'cookieJar', 'setval', 'name', 'update-pasteboard', 'statusCode', 'getMilliseconds', 'concat', 'got', 'https://i0.hdslb.com/bfs/live/18e2990a546d33368200f9058f3d9dbc4038eb5c.png', 'parse', 'info', 'cover', 'decode', 'data:', 'undefined', 'push', 'body', 'race', 'roomCover', 'open-url', 'match', 'isMute', 'reduce', 'getDate', 'getMonth', 'surge-version', 'logSeparator', 'then', 'log', 'Node.js', 'CookieJar', 'warn', 'findIndex', 'content-type', 'http', '/v1/scripting/evaluate', '\x0a🔴没有设置固定卡片集,\x20设置为空', '#57b632a5', '@chavy_boxjs_userCfgs.httpapi', 'bili-inter/77500100\x20CFNetwork/1.0\x20Darwin/23.5.0\x20os/ios\x20model/iPhone\x2013\x20mini\x20mobi_app/iphone_i\x20build/77500100\x20osVer/17.5.1\x20network/2\x20channel/AppStore', 'http://add.card/', '\x0a🟢动态卡片集有\x20', '1053sHcSzS', 'isStash', '4406Uvarir', 'assign', '\x0a🔴未获取到缓存,\x20设置为空', 'exports', 'isSurge', 'setdata', 'length', '5599920oKdVae', 'startsWith', 'fetch', '\x0a🟢当前卡片集:\x20', '.$1', 'getEnv', 'items', 'opts', '\x0a🔴获取直播间\x20', 'loaddata', 'get', 'https://raw.githubusercontent.com/Erica-Iris/SQLS/main/assets/card.png', 'msg', 'https://i0.hdslb.com/bfs/live/0b265af1af0a77abc47aa3b8f1a5c0769d8bd23b.png', 'startTime', 'GET', '@chavy_boxjs_userCfgs.httpapi_timeout', 'getjson', 'logLevel']; _0x2a72 = function () { return _0x5c28d1; }; return _0x2a72(); } function funcCard(_0xdaf51f) { const _0x10ed5d = _0x2b5621; $['log'](_0x10ed5d(0x1d0) + cards); const _0x44f022 = cards[_0x10ed5d(0x1ba)](_0x50ec9e => { return _0x50ec9e == _0xdaf51f || _0x50ec9e == _0xdaf51f; }); _0x44f022 == -0x1 ? ($[_0x10ed5d(0x1b6)](_0x10ed5d(0x18b) + _0xdaf51f), respBody[_0x10ed5d(0x123)][_0x10ed5d(0x105)][_0x10ed5d(0x1d3)][0x0] = card_info('add', _0xdaf51f)) : ($[_0x10ed5d(0x1b6)](_0x10ed5d(0xfe) + _0xdaf51f), respBody[_0x10ed5d(0x123)]['new_area_rank_info']['items'][0x0] = card_info(_0x10ed5d(0x18e), _0xdaf51f)); } function close_AD(_0x58376d) { const _0x5af5a8 = _0x2b5621; _0x58376d[_0x5af5a8(0x123)][_0x5af5a8(0x169)]['pendant_banner'] = []; } function close_more_live(_0x5644c1) { const _0xf43a7c = _0x2b5621; _0x5644c1[_0xf43a7c(0x123)][_0xf43a7c(0x182)] = {}; } function Env(_0x2c89f5, _0x2df9c1) { const _0x3152d4 = _0x2b5621; class _0x5d8fc0 { constructor(_0x23d91d) { const _0x3d5f6c = _0x25e3; this[_0x3d5f6c(0x181)] = _0x23d91d; } ['send'](_0x39b2ce, _0x3c07cd = _0x3152d4(0xef)) { const _0x196a2f = _0x3152d4; _0x39b2ce = typeof _0x39b2ce === _0x196a2f(0x11f) ? { 'url': _0x39b2ce } : _0x39b2ce; let _0x6bbae5 = this[_0x196a2f(0x1d7)]; _0x3c07cd === _0x196a2f(0x16f) && (_0x6bbae5 = this[_0x196a2f(0x142)]); const _0x4b1e0b = (_0x55332a, _0x33bc75 = 0x3e8) => { const _0x1256ee = _0x196a2f; return Promise[_0x1256ee(0x1ab)]([_0x55332a, new Promise((_0x2cc7f7, _0x37d933) => { setTimeout(() => { _0x37d933(new Error('请求超时')); }, _0x33bc75); })]); }, _0x3f9df8 = new Promise((_0x3bb91f, _0x396f8b) => { const _0x57c2b8 = _0x196a2f; _0x6bbae5[_0x57c2b8(0x12b)](this, _0x39b2ce, (_0x5701c6, _0x2c2aa7, _0x4a4f80) => { if (_0x5701c6) _0x396f8b(_0x5701c6); else _0x3bb91f(_0x2c2aa7); }); }); return _0x39b2ce['timeout'] ? _0x4b1e0b(_0x3f9df8, _0x39b2ce['timeout']) : _0x3f9df8; } [_0x3152d4(0x1d7)](_0x2e9e5a) { const _0x1f09b5 = _0x3152d4; return this['send'][_0x1f09b5(0x12b)](this[_0x1f09b5(0x181)], _0x2e9e5a); } [_0x3152d4(0x142)](_0x407f6a) { const _0x20b352 = _0x3152d4; return this[_0x20b352(0x16c)]['call'](this[_0x20b352(0x181)], _0x407f6a, 'POST'); } } return new class { constructor(_0x181c1e, _0x2ccf44) { const _0x4a799c = _0x3152d4; this['logLevels'] = { 'debug': 0x0, 'info': 0x1, 'warn': 0x2, 'error': 0x3 }, this[_0x4a799c(0x194)] = { 'debug': _0x4a799c(0x114), 'info': _0x4a799c(0xf8), 'warn': '[WARN]\x20', 'error': _0x4a799c(0x187) }, this[_0x4a799c(0xf2)] = _0x4a799c(0x1a4), this['name'] = _0x181c1e, this[_0x4a799c(0x1bc)] = new _0x5d8fc0(this), this[_0x4a799c(0x123)] = null, this[_0x4a799c(0x145)] = _0x4a799c(0x106), this[_0x4a799c(0x168)] = [], this[_0x4a799c(0x1af)] = ![], this[_0x4a799c(0x141)] = ![], this[_0x4a799c(0x1b4)] = '\x0a', this['encoding'] = 'utf-8', this[_0x4a799c(0xee)] = new Date()[_0x4a799c(0x10d)](), Object['assign'](this, _0x2ccf44), this[_0x4a799c(0x1b6)]('', '🔔' + this[_0x4a799c(0x19c)] + _0x4a799c(0x11d)); } [_0x3152d4(0x1d2)]() { const _0x580fdb = _0x3152d4; if (_0x580fdb(0x1a8) !== typeof $environment && $environment[_0x580fdb(0x1b3)]) return _0x580fdb(0x18f); if (_0x580fdb(0x1a8) !== typeof $environment && $environment[_0x580fdb(0x163)]) return 'Stash'; if ('undefined' !== typeof module && !!module[_0x580fdb(0x1c9)]) return _0x580fdb(0x1b7); if (_0x580fdb(0x1a8) !== typeof $task) return _0x580fdb(0x108); if ('undefined' !== typeof $loon) return _0x580fdb(0x146); if (_0x580fdb(0x1a8) !== typeof $rocket) return _0x580fdb(0x18c); } [_0x3152d4(0x117)]() { const _0x10fe34 = _0x3152d4; return _0x10fe34(0x1b7) === this[_0x10fe34(0x1d2)](); } [_0x3152d4(0x176)]() { return 'Quantumult\x20X' === this['getEnv'](); } [_0x3152d4(0x1ca)]() { const _0xa31257 = _0x3152d4; return _0xa31257(0x18f) === this[_0xa31257(0x1d2)](); } [_0x3152d4(0x15d)]() { const _0x314d18 = _0x3152d4; return _0x314d18(0x146) === this[_0x314d18(0x1d2)](); } [_0x3152d4(0xff)]() { const _0x4e35f8 = _0x3152d4; return 'Shadowrocket' === this[_0x4e35f8(0x1d2)](); } [_0x3152d4(0x1c5)]() { const _0x3fd096 = _0x3152d4; return _0x3fd096(0x110) === this['getEnv'](); } [_0x3152d4(0x143)](_0x3a1b11, _0x1f493b = null) { const _0x3d7d19 = _0x3152d4; try { return JSON[_0x3d7d19(0x1a3)](_0x3a1b11); } catch { return _0x1f493b; } } ['toStr'](_0xe956c2, _0x369f03 = null, ..._0x1836f4) { const _0x5364ba = _0x3152d4; try { return JSON[_0x5364ba(0xfd)](_0xe956c2, ..._0x1836f4); } catch { return _0x369f03; } } [_0x3152d4(0xf1)](_0x1251ea, _0x7afcd9) { const _0x4f454e = _0x3152d4; let _0x1da5cd = _0x7afcd9; const _0x613f19 = this['getdata'](_0x1251ea); if (_0x613f19) try { _0x1da5cd = JSON[_0x4f454e(0x1a3)](this['getdata'](_0x1251ea)); } catch { } return _0x1da5cd; } ['setjson'](_0x50e8aa, _0x12acac) { const _0x369033 = _0x3152d4; try { return this['setdata'](JSON[_0x369033(0xfd)](_0x50e8aa), _0x12acac); } catch { return ![]; } } [_0x3152d4(0x107)](_0x31b568) { return new Promise(_0x5248fb => { const _0x42dd6f = _0x25e3; this[_0x42dd6f(0x1d7)]({ 'url': _0x31b568 }, (_0x522188, _0xc0395f, _0x4bb7aa) => _0x5248fb(_0x4bb7aa)); }); } [_0x3152d4(0x16d)](_0x3335b9, _0x5085bf) { const _0x37dd78 = _0x3152d4; return new Promise(_0x51dd62 => { const _0xc8b44d = _0x25e3; let _0x546ec3 = this['getdata'](_0xc8b44d(0x1c0)); _0x546ec3 = _0x546ec3 ? _0x546ec3['replace'](/\n/g, '')['trim']() : _0x546ec3; let _0x4d489b = this[_0xc8b44d(0x125)](_0xc8b44d(0xf0)); _0x4d489b = _0x4d489b ? _0x4d489b * 0x1 : 0x14, _0x4d489b = _0x5085bf && _0x5085bf[_0xc8b44d(0x165)] ? _0x5085bf[_0xc8b44d(0x165)] : _0x4d489b; const [_0x15642d, _0x239f22] = _0x546ec3[_0xc8b44d(0xf9)]('@'), _0x790b27 = { 'url': _0xc8b44d(0x11a) + _0x239f22 + _0xc8b44d(0x1bd), 'body': { 'script_text': _0x3335b9, 'mock_type': _0xc8b44d(0x155), 'timeout': _0x4d489b }, 'headers': { 'X-Key': _0x15642d, 'Accept': _0xc8b44d(0x16b) }, 'policy': _0xc8b44d(0x130), 'timeout': _0x4d489b }; this[_0xc8b44d(0x142)](_0x790b27, (_0x2252d1, _0x2ac47, _0x2f09e0) => _0x51dd62(_0x2f09e0)); })[_0x37dd78(0x10a)](_0x483c05 => this[_0x37dd78(0x13c)](_0x483c05)); } ['loaddata']() { const _0x5424b9 = _0x3152d4; if (this[_0x5424b9(0x117)]()) { this['fs'] = this['fs'] ? this['fs'] : require('fs'), this['path'] = this['path'] ? this[_0x5424b9(0x137)] : require(_0x5424b9(0x137)); const _0x3216d1 = this['path'][_0x5424b9(0x17f)](this[_0x5424b9(0x145)]), _0x7a6e6d = this[_0x5424b9(0x137)][_0x5424b9(0x17f)](process['cwd'](), this[_0x5424b9(0x145)]), _0x47b415 = this['fs'][_0x5424b9(0x16a)](_0x3216d1), _0xa8160e = !_0x47b415 && this['fs'][_0x5424b9(0x16a)](_0x7a6e6d); if (_0x47b415 || _0xa8160e) { const _0x4e9229 = _0x47b415 ? _0x3216d1 : _0x7a6e6d; try { return JSON[_0x5424b9(0x1a3)](this['fs'][_0x5424b9(0xfb)](_0x4e9229)); } catch (_0xcd0ae6) { return {}; } } else return {}; } else return {}; } ['writedata']() { const _0x22ba5c = _0x3152d4; if (this[_0x22ba5c(0x117)]()) { this['fs'] = this['fs'] ? this['fs'] : require('fs'), this[_0x22ba5c(0x137)] = this[_0x22ba5c(0x137)] ? this[_0x22ba5c(0x137)] : require(_0x22ba5c(0x137)); const _0x1edead = this['path'][_0x22ba5c(0x17f)](this[_0x22ba5c(0x145)]), _0x3f6724 = this[_0x22ba5c(0x137)][_0x22ba5c(0x17f)](process[_0x22ba5c(0x17b)](), this[_0x22ba5c(0x145)]), _0x341aec = this['fs'][_0x22ba5c(0x16a)](_0x1edead), _0x181ee1 = !_0x341aec && this['fs'][_0x22ba5c(0x16a)](_0x3f6724), _0x42a7bc = JSON['stringify'](this[_0x22ba5c(0x123)]); if (_0x341aec) this['fs'][_0x22ba5c(0x153)](_0x1edead, _0x42a7bc); else _0x181ee1 ? this['fs']['writeFileSync'](_0x3f6724, _0x42a7bc) : this['fs']['writeFileSync'](_0x1edead, _0x42a7bc); } } [_0x3152d4(0x101)](_0x18781c, _0x4c432b, _0x3c6340 = undefined) { const _0x36dd8f = _0x3152d4, _0x56be84 = _0x4c432b[_0x36dd8f(0x154)](/\[(\d+)\]/g, _0x36dd8f(0x1d1))['split']('.'); let _0x3565c4 = _0x18781c; for (const _0x27629d of _0x56be84) { _0x3565c4 = Object(_0x3565c4)[_0x27629d]; if (_0x3565c4 === undefined) return _0x3c6340; } return _0x3565c4; } [_0x3152d4(0x164)](_0x58f1b1, _0x47396c, _0x4be90d) { const _0x1c2f1b = _0x3152d4; if (Object(_0x58f1b1) !== _0x58f1b1) return _0x58f1b1; if (!Array[_0x1c2f1b(0x17c)](_0x47396c)) _0x47396c = _0x47396c[_0x1c2f1b(0x186)]()[_0x1c2f1b(0x1ae)](/[^.[\]]+/g) || []; return _0x47396c[_0x1c2f1b(0x150)](0x0, -0x1)[_0x1c2f1b(0x1b0)]((_0x2d6cb3, _0x2b743d, _0x1963a6) => Object(_0x2d6cb3[_0x2b743d]) === _0x2d6cb3[_0x2b743d] ? _0x2d6cb3[_0x2b743d] : _0x2d6cb3[_0x2b743d] = Math['abs'](_0x47396c[_0x1963a6 + 0x1]) >> 0x0 === +_0x47396c[_0x1963a6 + 0x1] ? [] : {}, _0x58f1b1)[_0x47396c[_0x47396c[_0x1c2f1b(0x1cc)] - 0x1]] = _0x4be90d, _0x58f1b1; } ['getdata'](_0x56547c) { const _0x7204f3 = _0x3152d4; let _0x557ee1 = this[_0x7204f3(0x12f)](_0x56547c); if (/^@/[_0x7204f3(0x122)](_0x56547c)) { const [, _0x12f667, _0x502c05] = /^@(.*?)\.(.*?)$/[_0x7204f3(0x124)](_0x56547c), _0x517bd1 = _0x12f667 ? this[_0x7204f3(0x12f)](_0x12f667) : ''; if (_0x517bd1) try { const _0x53b66d = JSON[_0x7204f3(0x1a3)](_0x517bd1); _0x557ee1 = _0x53b66d ? this[_0x7204f3(0x101)](_0x53b66d, _0x502c05, '') : _0x557ee1; } catch (_0x2d8701) { _0x557ee1 = ''; } } return _0x557ee1; } [_0x3152d4(0x1cb)](_0x3788af, _0x23158e) { const _0x2c8203 = _0x3152d4; let _0x49a5f3 = ![]; if (/^@/['test'](_0x23158e)) { const [, _0x2fbc84, _0x41b86e] = /^@(.*?)\.(.*?)$/[_0x2c8203(0x124)](_0x23158e), _0xad5bd8 = this[_0x2c8203(0x12f)](_0x2fbc84), _0x8d1d22 = _0x2fbc84 ? _0xad5bd8 === _0x2c8203(0x120) ? null : _0xad5bd8 || '{}' : '{}'; try { const _0x3eff47 = JSON[_0x2c8203(0x1a3)](_0x8d1d22); this['lodash_set'](_0x3eff47, _0x41b86e, _0x3788af), _0x49a5f3 = this[_0x2c8203(0x19b)](JSON[_0x2c8203(0xfd)](_0x3eff47), _0x2fbc84); } catch (_0x549c2b) { const _0x83d21e = {}; this[_0x2c8203(0x164)](_0x83d21e, _0x41b86e, _0x3788af), _0x49a5f3 = this['setval'](JSON['stringify'](_0x83d21e), _0x2fbc84); } } else _0x49a5f3 = this[_0x2c8203(0x19b)](_0x3788af, _0x23158e); return _0x49a5f3; } [_0x3152d4(0x12f)](_0x3b5f80) { const _0x1863d8 = _0x3152d4; switch (this[_0x1863d8(0x1d2)]()) { case _0x1863d8(0x18f): case _0x1863d8(0x146): case 'Stash': case _0x1863d8(0x18c): return $persistentStore[_0x1863d8(0x189)](_0x3b5f80); case 'Quantumult\x20X': return $prefs['valueForKey'](_0x3b5f80); case _0x1863d8(0x1b7): this['data'] = this[_0x1863d8(0x1d6)](); return this[_0x1863d8(0x123)][_0x3b5f80]; default: return this[_0x1863d8(0x123)] && this[_0x1863d8(0x123)][_0x3b5f80] || null; } } [_0x3152d4(0x19b)](_0x3b6f17, _0x435702) { const _0x22b542 = _0x3152d4; switch (this[_0x22b542(0x1d2)]()) { case 'Surge': case _0x22b542(0x146): case _0x22b542(0x110): case _0x22b542(0x18c): return $persistentStore[_0x22b542(0x170)](_0x3b6f17, _0x435702); case 'Quantumult\x20X': return $prefs[_0x22b542(0x103)](_0x3b6f17, _0x435702); case _0x22b542(0x1b7): this[_0x22b542(0x123)] = this[_0x22b542(0x1d6)](), this[_0x22b542(0x123)][_0x435702] = _0x3b6f17, this[_0x22b542(0x15e)](); return !![]; default: return this[_0x22b542(0x123)] && this[_0x22b542(0x123)][_0x435702] || null; } } ['initGotEnv'](_0x397237) { const _0x1ad284 = _0x3152d4; this[_0x1ad284(0x1a1)] = this[_0x1ad284(0x1a1)] ? this[_0x1ad284(0x1a1)] : require(_0x1ad284(0x1a1)), this['cktough'] = this[_0x1ad284(0x174)] ? this['cktough'] : require('tough-cookie'), this[_0x1ad284(0x15c)] = this['ckjar'] ? this['ckjar'] : new this[(_0x1ad284(0x174))][(_0x1ad284(0x1b8))](), _0x397237 && (_0x397237[_0x1ad284(0x177)] = _0x397237[_0x1ad284(0x177)] ? _0x397237[_0x1ad284(0x177)] : {}, _0x397237 && (_0x397237[_0x1ad284(0x177)] = _0x397237['headers'] ? _0x397237[_0x1ad284(0x177)] : {}, undefined === _0x397237[_0x1ad284(0x177)][_0x1ad284(0x15f)] && undefined === _0x397237[_0x1ad284(0x177)][_0x1ad284(0x171)] && undefined === _0x397237[_0x1ad284(0x19a)] && (_0x397237[_0x1ad284(0x19a)] = this[_0x1ad284(0x15c)]))); } [_0x3152d4(0x1d7)](_0x215460, _0x20727c = () => { }) { const _0x5e8ab5 = _0x3152d4; _0x215460['headers'] && (delete _0x215460[_0x5e8ab5(0x177)]['Content-Type'], delete _0x215460[_0x5e8ab5(0x177)][_0x5e8ab5(0x151)], delete _0x215460['headers']['content-type'], delete _0x215460[_0x5e8ab5(0x177)]['content-length']); _0x215460[_0x5e8ab5(0x152)] && (_0x215460[_0x5e8ab5(0x136)] += '?' + this[_0x5e8ab5(0x12c)](_0x215460[_0x5e8ab5(0x152)])); if (typeof _0x215460[_0x5e8ab5(0x148)] !== _0x5e8ab5(0x1a8) && !_0x215460[_0x5e8ab5(0x148)]) { if (this['isSurge']() || this[_0x5e8ab5(0x15d)]()) _0x215460[_0x5e8ab5(0x17a)] = ![]; if (this['isQuanX']()) _0x215460['opts'] ? _0x215460[_0x5e8ab5(0x1d4)][_0x5e8ab5(0x10e)] = ![] : _0x215460[_0x5e8ab5(0x1d4)] = { 'redirection': ![] }; } switch (this[_0x5e8ab5(0x1d2)]()) { case _0x5e8ab5(0x18f): case _0x5e8ab5(0x146): case 'Stash': case 'Shadowrocket': default: this[_0x5e8ab5(0x1ca)]() && this['isNeedRewrite'] && (_0x215460[_0x5e8ab5(0x177)] = _0x215460[_0x5e8ab5(0x177)] || {}, Object[_0x5e8ab5(0x1c7)](_0x215460[_0x5e8ab5(0x177)], { 'X-Surge-Skip-Scripting': ![] })); $httpClient['get'](_0x215460, (_0x40d696, _0x17f78d, _0x1b2dd7) => { const _0x482e9f = _0x5e8ab5; !_0x40d696 && _0x17f78d && (_0x17f78d[_0x482e9f(0x1aa)] = _0x1b2dd7, _0x17f78d[_0x482e9f(0x19e)] = _0x17f78d['status'] ? _0x17f78d[_0x482e9f(0x135)] : _0x17f78d['statusCode'], _0x17f78d[_0x482e9f(0x135)] = _0x17f78d[_0x482e9f(0x19e)]), _0x20727c(_0x40d696, _0x17f78d, _0x1b2dd7); }); break; case _0x5e8ab5(0x108): this['isNeedRewrite'] && (_0x215460[_0x5e8ab5(0x1d4)] = _0x215460['opts'] || {}, Object[_0x5e8ab5(0x1c7)](_0x215460[_0x5e8ab5(0x1d4)], { 'hints': ![] })); $task[_0x5e8ab5(0x1cf)](_0x215460)[_0x5e8ab5(0x1b5)](_0x26ef75 => { const { statusCode: _0x56a2e4, statusCode: _0x3036b0, headers: _0x4cc9c0, body: _0x161ec3, bodyBytes: _0x2072af } = _0x26ef75; _0x20727c(null, { 'status': _0x56a2e4, 'statusCode': _0x3036b0, 'headers': _0x4cc9c0, 'body': _0x161ec3, 'bodyBytes': _0x2072af }, _0x161ec3, _0x2072af); }, _0x16d777 => _0x20727c(_0x16d777 && _0x16d777['error'] || _0x5e8ab5(0x10b))); break; case _0x5e8ab5(0x1b7): let _0x59538a = require(_0x5e8ab5(0x196)); this[_0x5e8ab5(0x15a)](_0x215460), this[_0x5e8ab5(0x1a1)](_0x215460)['on']('redirect', (_0x40e5ee, _0x5421a2) => { const _0x448e2f = _0x5e8ab5; try { if (_0x40e5ee[_0x448e2f(0x177)][_0x448e2f(0x111)]) { const _0x3c6339 = _0x40e5ee[_0x448e2f(0x177)][_0x448e2f(0x111)][_0x448e2f(0x156)](this['cktough'][_0x448e2f(0x171)]['parse'])[_0x448e2f(0x186)](); _0x3c6339 && this[_0x448e2f(0x15c)][_0x448e2f(0x183)](_0x3c6339, null), _0x5421a2['cookieJar'] = this[_0x448e2f(0x15c)]; } } catch (_0x75723a) { this['logErr'](_0x75723a); } })['then'](_0x4031b8 => { const _0x188222 = _0x5e8ab5, { statusCode: _0x1b2359, statusCode: _0x15899c, headers: _0x2e5357, rawBody: _0x27ee13 } = _0x4031b8, _0x25430e = _0x59538a[_0x188222(0x1a6)](_0x27ee13, this[_0x188222(0x14d)]); _0x20727c(null, { 'status': _0x1b2359, 'statusCode': _0x15899c, 'headers': _0x2e5357, 'rawBody': _0x27ee13, 'body': _0x25430e }, _0x25430e); }, _0x56e788 => { const _0x26177d = _0x5e8ab5, { message: _0x2f8b33, response: _0xbea5 } = _0x56e788; _0x20727c(_0x2f8b33, _0xbea5, _0xbea5 && _0x59538a['decode'](_0xbea5[_0x26177d(0xf5)], this[_0x26177d(0x14d)])); }); break; } } [_0x3152d4(0x142)](_0x3fd527, _0x322a4b = () => { }) { const _0x5bbe53 = _0x3152d4, _0x1a164c = _0x3fd527[_0x5bbe53(0x157)] ? _0x3fd527[_0x5bbe53(0x157)][_0x5bbe53(0x149)]() : _0x5bbe53(0x142); _0x3fd527[_0x5bbe53(0x1aa)] && _0x3fd527[_0x5bbe53(0x177)] && !_0x3fd527[_0x5bbe53(0x177)]['Content-Type'] && !_0x3fd527[_0x5bbe53(0x177)][_0x5bbe53(0x1bb)] && (_0x3fd527['headers'][_0x5bbe53(0x1bb)] = _0x5bbe53(0x15b)); _0x3fd527['headers'] && (delete _0x3fd527[_0x5bbe53(0x177)][_0x5bbe53(0x151)], delete _0x3fd527[_0x5bbe53(0x177)][_0x5bbe53(0x14c)]); if (typeof _0x3fd527[_0x5bbe53(0x148)] !== _0x5bbe53(0x1a8) && !_0x3fd527['followRedirect']) { if (this[_0x5bbe53(0x1ca)]() || this[_0x5bbe53(0x15d)]()) _0x3fd527['auto-redirect'] = ![]; if (this[_0x5bbe53(0x176)]()) _0x3fd527[_0x5bbe53(0x1d4)] ? _0x3fd527[_0x5bbe53(0x1d4)][_0x5bbe53(0x10e)] = ![] : _0x3fd527[_0x5bbe53(0x1d4)] = { 'redirection': ![] }; } switch (this[_0x5bbe53(0x1d2)]()) { case 'Surge': case _0x5bbe53(0x146): case 'Stash': case 'Shadowrocket': default: this[_0x5bbe53(0x1ca)]() && this[_0x5bbe53(0x141)] && (_0x3fd527['headers'] = _0x3fd527[_0x5bbe53(0x177)] || {}, Object[_0x5bbe53(0x1c7)](_0x3fd527[_0x5bbe53(0x177)], { 'X-Surge-Skip-Scripting': ![] })); $httpClient[_0x1a164c](_0x3fd527, (_0x2d3862, _0x2e5f1e, _0x2252b7) => { const _0x44b0b2 = _0x5bbe53; !_0x2d3862 && _0x2e5f1e && (_0x2e5f1e[_0x44b0b2(0x1aa)] = _0x2252b7, _0x2e5f1e[_0x44b0b2(0x19e)] = _0x2e5f1e[_0x44b0b2(0x135)] ? _0x2e5f1e[_0x44b0b2(0x135)] : _0x2e5f1e['statusCode'], _0x2e5f1e['status'] = _0x2e5f1e[_0x44b0b2(0x19e)]), _0x322a4b(_0x2d3862, _0x2e5f1e, _0x2252b7); }); break; case _0x5bbe53(0x108): _0x3fd527[_0x5bbe53(0x157)] = _0x1a164c; this[_0x5bbe53(0x141)] && (_0x3fd527[_0x5bbe53(0x1d4)] = _0x3fd527[_0x5bbe53(0x1d4)] || {}, Object[_0x5bbe53(0x1c7)](_0x3fd527['opts'], { 'hints': ![] })); $task['fetch'](_0x3fd527)[_0x5bbe53(0x1b5)](_0x432a36 => { const { statusCode: _0xa3295b, statusCode: _0x5c9291, headers: _0x5857d8, body: _0x2cf58b, bodyBytes: _0x566d61 } = _0x432a36; _0x322a4b(null, { 'status': _0xa3295b, 'statusCode': _0x5c9291, 'headers': _0x5857d8, 'body': _0x2cf58b, 'bodyBytes': _0x566d61 }, _0x2cf58b, _0x566d61); }, _0x1937a4 => _0x322a4b(_0x1937a4 && _0x1937a4[_0x5bbe53(0x179)] || _0x5bbe53(0x10b))); break; case _0x5bbe53(0x1b7): let _0x4b6032 = require(_0x5bbe53(0x196)); this[_0x5bbe53(0x15a)](_0x3fd527); const { url: _0x47b0bf, ..._0x2db1fe } = _0x3fd527; this[_0x5bbe53(0x1a1)][_0x1a164c](_0x47b0bf, _0x2db1fe)[_0x5bbe53(0x1b5)](_0x26de2f => { const _0x2b18cd = _0x5bbe53, { statusCode: _0x5dea20, statusCode: _0xd25eab, headers: _0x99010, rawBody: _0x2830e0 } = _0x26de2f, _0x3511d7 = _0x4b6032[_0x2b18cd(0x1a6)](_0x2830e0, this[_0x2b18cd(0x14d)]); _0x322a4b(null, { 'status': _0x5dea20, 'statusCode': _0xd25eab, 'headers': _0x99010, 'rawBody': _0x2830e0, 'body': _0x3511d7 }, _0x3511d7); }, _0x22bc07 => { const _0x1c3037 = _0x5bbe53, { message: _0x70c776, response: _0x525b05 } = _0x22bc07; _0x322a4b(_0x70c776, _0x525b05, _0x525b05 && _0x4b6032[_0x1c3037(0x1a6)](_0x525b05[_0x1c3037(0xf5)], this['encoding'])); }); break; } } [_0x3152d4(0x197)](_0x246d15, _0x56b15b = null) { const _0x10816e = _0x3152d4, _0x24e34f = _0x56b15b ? new Date(_0x56b15b) : new Date(); let _0x2034ba = { 'M+': _0x24e34f[_0x10816e(0x1b2)]() + 0x1, 'd+': _0x24e34f[_0x10816e(0x1b1)](), 'H+': _0x24e34f[_0x10816e(0x102)](), 'm+': _0x24e34f[_0x10816e(0xf6)](), 's+': _0x24e34f['getSeconds'](), 'q+': Math[_0x10816e(0x100)]((_0x24e34f[_0x10816e(0x1b2)]() + 0x3) / 0x3), 'S': _0x24e34f[_0x10816e(0x19f)]() }; if (/(y+)/[_0x10816e(0x122)](_0x246d15)) _0x246d15 = _0x246d15[_0x10816e(0x154)](RegExp['$1'], (_0x24e34f['getFullYear']() + '')[_0x10816e(0x126)](0x4 - RegExp['$1'][_0x10816e(0x1cc)])); for (let _0x265b5a in _0x2034ba) if (new RegExp('(' + _0x265b5a + ')')['test'](_0x246d15)) _0x246d15 = _0x246d15[_0x10816e(0x154)](RegExp['$1'], RegExp['$1'][_0x10816e(0x1cc)] == 0x1 ? _0x2034ba[_0x265b5a] : ('00' + _0x2034ba[_0x265b5a])[_0x10816e(0x126)](('' + _0x2034ba[_0x265b5a])['length'])); return _0x246d15; } [_0x3152d4(0x12c)](_0x324efc) { const _0x495e13 = _0x3152d4; let _0x26e1c2 = ''; for (const _0x2ce2be in _0x324efc) { let _0x31761c = _0x324efc[_0x2ce2be]; _0x31761c != null && _0x31761c !== '' && (typeof _0x31761c === _0x495e13(0x198) && (_0x31761c = JSON[_0x495e13(0xfd)](_0x31761c)), _0x26e1c2 += _0x2ce2be + '=' + _0x31761c + '&'); } return _0x26e1c2 = _0x26e1c2[_0x495e13(0x11e)](0x0, _0x26e1c2[_0x495e13(0x1cc)] - 0x1), _0x26e1c2; } [_0x3152d4(0xec)](_0x13caa2 = _0x2c89f5, _0x9d44b5 = '', _0xacd678 = '', _0x3727bf = {}) { const _0x7fcf32 = _0x3152d4, _0x48e21d = _0x1014df => { const _0x36916e = _0x25e3, { $open: _0x2186bb, $copy: _0x194ae7, $media: _0x204f54, $mediaMime: _0x1bf6ac } = _0x1014df; switch (typeof _0x1014df) { case undefined: return _0x1014df; case _0x36916e(0x11f): switch (this[_0x36916e(0x1d2)]()) { case _0x36916e(0x18f): case _0x36916e(0x110): default: return { 'url': _0x1014df }; case _0x36916e(0x146): case _0x36916e(0x18c): return _0x1014df; case 'Quantumult\x20X': return { 'open-url': _0x1014df }; case _0x36916e(0x1b7): return undefined; }case _0x36916e(0x198): switch (this[_0x36916e(0x1d2)]()) { case _0x36916e(0x18f): case _0x36916e(0x110): case _0x36916e(0x18c): default: { const _0x611fb = {}; let _0x42930a = _0x1014df[_0x36916e(0x12a)] || _0x1014df['url'] || _0x1014df['open-url'] || _0x2186bb; if (_0x42930a) Object[_0x36916e(0x1c7)](_0x611fb, { 'action': _0x36916e(0x1ad), 'url': _0x42930a }); let _0x37c38e = _0x1014df[_0x36916e(0x19d)] || _0x1014df['updatePasteboard'] || _0x194ae7; _0x37c38e && Object['assign'](_0x611fb, { 'action': _0x36916e(0x178), 'text': _0x37c38e }); if (_0x204f54) { let _0x3f14ba = undefined, _0x52b244 = undefined, _0x55d2e1 = undefined; if (_0x204f54['startsWith'](_0x36916e(0x1bc))) _0x3f14ba = _0x204f54; else { if (_0x204f54[_0x36916e(0x1ce)](_0x36916e(0x1a7))) { const [_0x415abd] = _0x204f54[_0x36916e(0xf9)](';'), [, _0x5645c3] = _0x204f54[_0x36916e(0xf9)](','); _0x52b244 = _0x5645c3, _0x55d2e1 = _0x415abd[_0x36916e(0x154)](_0x36916e(0x1a7), ''); } else { const _0x457d33 = _0x4ff47f => { const _0x365063 = _0x36916e, _0x16248c = { 'JVBERi0': 'application/pdf', 'R0lGODdh': 'image/gif', 'R0lGODlh': 'image/gif', 'iVBORw0KGgo': _0x365063(0x109), '/9j/': 'image/jpg' }; for (var _0x443ba7 in _0x16248c) { if (_0x4ff47f[_0x365063(0x13b)](_0x443ba7) === 0x0) return _0x16248c[_0x443ba7]; } return null; }; _0x52b244 = _0x204f54, _0x55d2e1 = _0x457d33(_0x204f54); } } Object['assign'](_0x611fb, { 'media-url': _0x3f14ba, 'media-base64': _0x52b244, 'media-base64-mime': _0x1bf6ac ?? _0x55d2e1 }); } return Object[_0x36916e(0x1c7)](_0x611fb, { 'auto-dismiss': _0x1014df[_0x36916e(0x195)], 'sound': _0x1014df[_0x36916e(0x17e)] }), _0x611fb; } case _0x36916e(0x146): { const _0x40fe1b = {}; let _0x577a91 = _0x1014df[_0x36916e(0x12a)] || _0x1014df[_0x36916e(0x136)] || _0x1014df[_0x36916e(0x1ad)] || _0x2186bb; if (_0x577a91) Object[_0x36916e(0x1c7)](_0x40fe1b, { 'openUrl': _0x577a91 }); let _0x18abb8 = _0x1014df[_0x36916e(0x138)] || _0x1014df[_0x36916e(0x188)]; if (_0x204f54?.[_0x36916e(0x1ce)](_0x36916e(0x1bc))) _0x18abb8 = _0x204f54; if (_0x18abb8) Object['assign'](_0x40fe1b, { 'mediaUrl': _0x18abb8 }); return console[_0x36916e(0x1b6)](JSON[_0x36916e(0xfd)](_0x40fe1b)), _0x40fe1b; } case _0x36916e(0x108): { const _0x3c3cbd = {}; let _0x56c8f7 = _0x1014df[_0x36916e(0x1ad)] || _0x1014df[_0x36916e(0x136)] || _0x1014df[_0x36916e(0x12a)] || _0x2186bb; if (_0x56c8f7) Object[_0x36916e(0x1c7)](_0x3c3cbd, { 'open-url': _0x56c8f7 }); let _0x444d37 = _0x1014df[_0x36916e(0x188)] || _0x1014df[_0x36916e(0x138)]; if (_0x204f54?.['startsWith']('http')) _0x444d37 = _0x204f54; if (_0x444d37) Object[_0x36916e(0x1c7)](_0x3c3cbd, { 'media-url': _0x444d37 }); let _0x3a41a7 = _0x1014df[_0x36916e(0x19d)] || _0x1014df[_0x36916e(0x190)] || _0x194ae7; if (_0x3a41a7) Object['assign'](_0x3c3cbd, { 'update-pasteboard': _0x3a41a7 }); return console[_0x36916e(0x1b6)](JSON[_0x36916e(0xfd)](_0x3c3cbd)), _0x3c3cbd; } case 'Node.js': return undefined; }default: return undefined; } }; if (!this['isMute']) switch (this[_0x7fcf32(0x1d2)]()) { case _0x7fcf32(0x18f): case _0x7fcf32(0x146): case _0x7fcf32(0x110): case _0x7fcf32(0x18c): default: $notification['post'](_0x13caa2, _0x9d44b5, _0xacd678, _0x48e21d(_0x3727bf)); break; case _0x7fcf32(0x108): $notify(_0x13caa2, _0x9d44b5, _0xacd678, _0x48e21d(_0x3727bf)); break; case 'Node.js': break; }if (!this[_0x7fcf32(0x192)]) { let _0x32901e = ['', '==============📣系统通知📣==============']; _0x32901e[_0x7fcf32(0x1a9)](_0x13caa2), _0x9d44b5 ? _0x32901e[_0x7fcf32(0x1a9)](_0x9d44b5) : '', _0xacd678 ? _0x32901e[_0x7fcf32(0x1a9)](_0xacd678) : '', console['log'](_0x32901e[_0x7fcf32(0x14b)]('\x0a')), this[_0x7fcf32(0x168)] = this['logs'][_0x7fcf32(0x1a0)](_0x32901e); } } ['debug'](..._0x487560) { const _0x206d31 = _0x3152d4; this[_0x206d31(0x14e)][this['logLevel']] <= this[_0x206d31(0x14e)][_0x206d31(0x104)] && (_0x487560['length'] > 0x0 && (this[_0x206d31(0x168)] = [...this[_0x206d31(0x168)], ..._0x487560]), console[_0x206d31(0x1b6)]('' + this[_0x206d31(0x194)]['debug'] + _0x487560['map'](_0x594649 => _0x594649 ?? String(_0x594649))[_0x206d31(0x14b)](this[_0x206d31(0x1b4)]))); } [_0x3152d4(0x1a4)](..._0x35b869) { const _0xbccae2 = _0x3152d4; this['logLevels'][this[_0xbccae2(0xf2)]] <= this[_0xbccae2(0x14e)][_0xbccae2(0x1a4)] && (_0x35b869[_0xbccae2(0x1cc)] > 0x0 && (this[_0xbccae2(0x168)] = [...this[_0xbccae2(0x168)], ..._0x35b869]), console[_0xbccae2(0x1b6)]('' + this[_0xbccae2(0x194)]['info'] + _0x35b869[_0xbccae2(0x156)](_0x112b12 => _0x112b12 ?? String(_0x112b12))[_0xbccae2(0x14b)](this[_0xbccae2(0x1b4)]))); } ['warn'](..._0x2b6723) { const _0x317090 = _0x3152d4; this[_0x317090(0x14e)][this[_0x317090(0xf2)]] <= this['logLevels'][_0x317090(0x1b9)] && (_0x2b6723[_0x317090(0x1cc)] > 0x0 && (this[_0x317090(0x168)] = [...this[_0x317090(0x168)], ..._0x2b6723]), console[_0x317090(0x1b6)]('' + this[_0x317090(0x194)][_0x317090(0x1b9)] + _0x2b6723[_0x317090(0x156)](_0x353552 => _0x353552 ?? String(_0x353552))[_0x317090(0x14b)](this[_0x317090(0x1b4)]))); } [_0x3152d4(0x179)](..._0x3a7b1e) { const _0x351fbf = _0x3152d4; this[_0x351fbf(0x14e)][this[_0x351fbf(0xf2)]] <= this[_0x351fbf(0x14e)][_0x351fbf(0x179)] && (_0x3a7b1e[_0x351fbf(0x1cc)] > 0x0 && (this[_0x351fbf(0x168)] = [...this[_0x351fbf(0x168)], ..._0x3a7b1e]), console['log']('' + this[_0x351fbf(0x194)][_0x351fbf(0x179)] + _0x3a7b1e[_0x351fbf(0x156)](_0x345e69 => _0x345e69 ?? String(_0x345e69))[_0x351fbf(0x14b)](this[_0x351fbf(0x1b4)]))); } [_0x3152d4(0x1b6)](..._0x23d06f) { const _0x39a343 = _0x3152d4; _0x23d06f[_0x39a343(0x1cc)] > 0x0 && (this[_0x39a343(0x168)] = [...this[_0x39a343(0x168)], ..._0x23d06f]), console[_0x39a343(0x1b6)](_0x23d06f[_0x39a343(0x156)](_0xfe7d60 => _0xfe7d60 ?? String(_0xfe7d60))['join'](this[_0x39a343(0x1b4)])); } [_0x3152d4(0x13c)](_0x46500, _0x454493) { const _0x56e339 = _0x3152d4; switch (this['getEnv']()) { case 'Surge': case 'Loon': case _0x56e339(0x110): case _0x56e339(0x18c): case _0x56e339(0x108): default: this['log']('', '❗️' + this[_0x56e339(0x19c)] + _0x56e339(0x14f), _0x454493, _0x46500); break; case _0x56e339(0x1b7): this['log']('', '❗️' + this[_0x56e339(0x19c)] + _0x56e339(0x14f), _0x454493, typeof _0x46500[_0x56e339(0x131)] !== _0x56e339(0x1a8) ? _0x46500[_0x56e339(0x131)] : _0x46500, _0x46500['stack']); break; } } [_0x3152d4(0x18a)](_0xf91f4e) { return new Promise(_0x782806 => setTimeout(_0x782806, _0xf91f4e)); } [_0x3152d4(0x129)](_0x482349 = {}) { const _0x261102 = _0x3152d4, _0x1c49ba = new Date()[_0x261102(0x10d)](), _0x1ce2ae = (_0x1c49ba - this[_0x261102(0xee)]) / 0x3e8; this[_0x261102(0x1b6)]('', '🔔' + this[_0x261102(0x19c)] + _0x261102(0xf4) + _0x1ce2ae + '\x20秒'), this[_0x261102(0x1b6)](); switch (this[_0x261102(0x1d2)]()) { case _0x261102(0x18f): case _0x261102(0x146): case _0x261102(0x110): case _0x261102(0x18c): case _0x261102(0x108): default: $done(_0x482349); break; case _0x261102(0x1b7): process[_0x261102(0x12e)](0x1); } } }(_0x2c89f5, _0x2df9c1); }